"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Command
const base_1 = require("../base");
// Formatters
const project_export_1 = require("../services/formatters/project-export");
// Services
const document_jipt_paths_fetcher_1 = require("../services/document-jipt-paths-fetcher");
const document_export_1 = require("../services/formatters/document-export");
const hook_runner_1 = require("../services/hook-runner");
// Types
const document_config_1 = require("../types/document-config");
class Jipt extends base_1.default {
    async run() {
        const { args } = this.parse(Jipt);
        const documents = this.projectConfig.files();
        const formatter = new document_export_1.default();
        // From all the documentConfigs, do the export, write to local file and log the results.
        new project_export_1.default().log();
        for (const document of documents) {
            await new hook_runner_1.default(document).run(document_config_1.Hooks.beforeExport);
            const targets = new document_jipt_paths_fetcher_1.default().fetch(this.project, document, args.pseudoLanguageName);
            await Promise.all(targets.map(async ({ path, documentPath }) => {
                formatter.log(path);
                return document.exportJipt(path, documentPath);
            }));
            await new hook_runner_1.default(document).run(document_config_1.Hooks.afterExport);
        }
    }
}
Jipt.description = 'Export jipt files from Accent and write them to your local filesystem';
Jipt.examples = [`$ accent jipt`];
Jipt.args = [
    {
        description: 'The pseudo language for in-place-translation-editing',
        name: 'pseudoLanguageName',
        required: true,
    },
];
Jipt.flags = {};
exports.default = Jipt;
