"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Vendor
const chalk_1 = require("chalk");
// Services
const revision_slug_fetcher_1 = require("../revision-slug-fetcher");
class ProjectStatsFormatter {
    constructor(project) {
        this.project = project;
    }
    log() {
        const translationsCount = this.project.revisions.reduce((memo, revision) => memo + revision.translationsCount, 0);
        const conflictsCount = this.project.revisions.reduce((memo, revision) => memo + revision.conflictsCount, 0);
        const reviewedCount = this.project.revisions.reduce((memo, revision) => memo + revision.reviewedCount, 0);
        console.log(chalk_1.default.magenta('Name'));
        console.log('  ', chalk_1.default.white.bold(this.project.name));
        console.log('');
        console.log(chalk_1.default.magenta('Last synced'));
        if (this.project.lastSyncedAt) {
            console.log('  ', chalk_1.default.white.bold(this.project.lastSyncedAt));
        }
        else {
            console.log('  ', chalk_1.default.gray.bold('~~ Never synced ~~'));
        }
        console.log('');
        console.log(chalk_1.default.magenta('Master language'));
        console.log('  ', `${chalk_1.default.white.bold(revision_slug_fetcher_1.fetchNameFromRevision(this.project.masterRevision))} – ${revision_slug_fetcher_1.fetchFromRevision(this.project.masterRevision)}`);
        console.log('');
        if (this.project.revisions.length > 1) {
            console.log(chalk_1.default.magenta('Translations', `(${this.project.revisions.length - 1})`));
            this.project.revisions.forEach((revision) => {
                if (this.project.masterRevision.id !== revision.id) {
                    console.log('  ', `${chalk_1.default.white.bold(revision_slug_fetcher_1.fetchNameFromRevision(revision))} – ${revision_slug_fetcher_1.fetchFromRevision(revision)}`);
                    console.log('');
                }
            });
        }
        if (this.project.documents.meta.totalEntries !== 0) {
            console.log(chalk_1.default.magenta('Documents', `(${this.project.documents.meta.totalEntries})`));
            this.project.documents.entries.forEach((document) => {
                console.log('  ', chalk_1.default.gray('Format:'), chalk_1.default.white.bold(document.format));
                console.log('  ', chalk_1.default.gray('Path:'), chalk_1.default.white.bold(document.path));
                console.log('');
            });
        }
        console.log(chalk_1.default.magenta('Strings'));
        console.log('  ', chalk_1.default.white('# Strings:'), chalk_1.default.white(`${translationsCount}`));
        console.log('  ', chalk_1.default.green('✓ Reviewed:'), chalk_1.default.green(`${reviewedCount}`));
        console.log('  ', chalk_1.default.red('× In review:'), chalk_1.default.red(`${conflictsCount}`));
    }
}
exports.default = ProjectStatsFormatter;
