# syntax=docker/dockerfile:1

# Step 1 - hex dependencies
#
FROM hexpm/elixir:1.14.0-erlang-23.3.4.14-alpine-3.14.5 as otp-dependencies

ENV MIX_ENV=dev

WORKDIR /build

# Install Alpine dependencies
RUN apk add --no-cache git \
    make \
    build-base

COPY mix.exs ./
COPY config config
COPY lib lib
COPY priv priv

# Install Erlang && hex dependencies
RUN mix local.rebar --force && \
    mix local.hex --force && \
    mix deps.get && \
    mix deps.compile

#
# Step 2 - build the OTP binary
#
FROM hexpm/elixir:1.14.0-erlang-23.3.4.14-alpine-3.14.5 as otp-builder

ENV MIX_ENV=dev

WORKDIR /build

# Install Alpine dependencies
RUN apk update --no-cache && \
    apk upgrade --no-cache && \
    apk add --no-cache \
    git \
    erlang-dev \
    make \
    bash \
    postgresql-client \
    build-base \
    inotify-tools

RUN mix local.rebar --force && \
    mix local.hex --force

# Copy hex dependencies (step 1)
COPY --from=otp-dependencies /build/deps deps
COPY --from=otp-dependencies /build/config config
COPY --from=otp-dependencies /build/lib lib
COPY --from=otp-dependencies /build/priv priv
COPY --from=otp-dependencies /build/_build _build
COPY --from=otp-dependencies /build/mix.exs .
COPY --from=otp-dependencies /build/mix.lock .

# Copying files for test and CI
COPY coveralls.json .
COPY .credo.exs .
COPY .sobelow-conf .
COPY .formatter.exs .

RUN mix assets.deploy

ENTRYPOINT ["/build/priv/docker-entrypoint.sh"]
